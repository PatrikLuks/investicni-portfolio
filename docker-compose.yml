# Docker Compose configuration for Portfolio Manager Pro
# Complete setup with optional services

version: '3.8'

services:
  # Main application
  portfolio-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: portfolio-manager-pro
    ports:
      - "8080:80"
    environment:
      - TZ=Europe/Prague
      - NODE_ENV=production
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 10s
    networks:
      - portfolio-network
    labels:
      - "com.portfolio.service=app"
      - "com.portfolio.version=3.0.0"

  # Optional: Nginx reverse proxy with SSL
  nginx-proxy:
    image: nginx:alpine
    container_name: portfolio-nginx-proxy
    ports:
      - "443:443"
    volumes:
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./nginx/proxy.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - portfolio-app
    networks:
      - portfolio-network
    profiles:
      - with-ssl
    restart: unless-stopped

  # Optional: Monitoring with Prometheus
  prometheus:
    image: prom/prometheus:latest
    container_name: portfolio-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    networks:
      - portfolio-network
    profiles:
      - with-monitoring
    restart: unless-stopped

  # Optional: Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    container_name: portfolio-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana-data:/var/lib/grafana
    depends_on:
      - prometheus
    networks:
      - portfolio-network
    profiles:
      - with-monitoring
    restart: unless-stopped

networks:
  portfolio-network:
    driver: bridge
    name: portfolio-net

volumes:
  prometheus-data:
    name: portfolio-prometheus-data
  grafana-data:
    name: portfolio-grafana-data

# Usage:
# Basic: docker-compose up -d
# With SSL: docker-compose --profile with-ssl up -d
# With monitoring: docker-compose --profile with-monitoring up -d
# All features: docker-compose --profile with-ssl --profile with-monitoring up -d
